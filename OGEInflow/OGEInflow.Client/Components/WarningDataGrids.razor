@* @namespace OGEInflow.Client.Components; *@
@using OGEInflow.Client.Services
@inject IDialogService DialogService

<MudPaper Class="pa-4" Elevation="2">
    <MudText Typo="Typo.h6" Class="mb-2">@Title</MudText>

    <MudTextField  @bind-Value="_searchString"
                  Placeholder="Search warnings..."
                  Adornment="Adornment.Start"
                  AdornmentIcon="@Icons.Material.Filled.Search"
                  Class="mb-2"
                  Immediate="true" />

    <MudDataGrid T="Warning"
                 Items="@Warnings"
                 SortMode="SortMode.Multiple"
                 QuickFilter="@FilteredWarnings"
                 Dense
                 Breakpoint="Breakpoint.Sm"
                 Filterable="true"
                 RowsPerPage="10">

        <Columns>
            <PropertyColumn Property="x => x.ReaderId" Title="Reader" />
            <PropertyColumn Property="x => x.PersonID" Title="Person" />
            <PropertyColumn Property="x => x.Severity" Title="Severity" />
            <PropertyColumn Property="x => x.Message" Title="Message" />
            <PropertyColumn Property="x => x.Timestamp" Title="Time" Format="g" />
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Warning" />
        </PagerContent>
    </MudDataGrid>
</MudPaper>

@code {
    [Parameter]
    public IEnumerable<Warning> Warnings { get; set; }
    

    [Parameter]
    public string Title { get; set; } = "Warnings";

    private string _searchString = "";

    private Func<Warning, bool> FilteredWarnings => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        return (x.ReaderId?.Contains(_searchString, StringComparison.OrdinalIgnoreCase) ?? false) ||
               (x.PersonID?.Contains(_searchString, StringComparison.OrdinalIgnoreCase) ?? false) ||
               (x.Severity.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase)) ||
               (x.Message?.Contains(_searchString, StringComparison.OrdinalIgnoreCase) ?? false) ||
               (x.Timestamp.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase));
    };
    
}
