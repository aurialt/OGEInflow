@page "/Map"
@using OGEInflow.Services
@using OGEInflow.Client.Components
@using OGEInflow.Client.Services
<link rel="stylesheet" href="css/map.css"/>
<h3>Map</h3>
<div class="page-container">
    <div class="greater-map-container">

        <div class="legend">
            <div class="legend-item" @onclick="TogglePanels">
                <div class="legend-square @(ShowPanels ? "map-panel" : "")"></div>
                <span>Panels</span>
            </div>
            <div class="legend-item" @onclick="ToggleReaders">
                <div class="legend-square @(ShowReaders ? "reader" : "")"></div>
                <span>Readers</span>
            </div>
            <div class="legend-item" @onclick="ToggleHotPoints">
                <div class="legend-square @(ShowHotPoints ? "hotpoint" : "")"></div>
                <span>Hot Points</span>
            </div>
        </div>
        <div class="map-container">
            <MudImage Class="@MapFilterClass" Src="img/facility.png"></MudImage>
            @if (ShowPanels)
            {
                <Panel Label="3-50" Top="100px" Left="100px" OnClick="@(() => EditMapPopup("test", "test", null, null))"/>
            }
            @if (ShowReaders)
            {
                <Pin Label="17-182" Top="100px" Left="40px" OnClick="@(() => Pin.ReaderSetMapPopup("17-182"))"/>
                
                <Pin Label="4-40" Top="300px" Left="70px" OnClick="@(() => EditMapPopup("test", "test", null, null))"/>
            }
            
            
        </div>
    </div>
    @if (ShowPopup)
    {
        <MapPopup IconName="@IconName" Usage="@Usage" Issues="@Issues" ConnectedReaders="@ConnectedReaders" OnClose="() => OnEditMapPopup?.Invoke()"/>
    }
</div>