@page "/"
@using OGEInflow.Services
<link rel="stylesheet" href="css/home.css">


<PageTitle>Home</PageTitle>
<h1>Welcome</h1>

<div class="dateFilter">
    <h2 class="timeframe">TimeFrame</h2>

    <!-- Start Date Picker -->
    <div class="datepicker">
        <MudDatePicker @ref="_startPicker"
                       Label="Start Date"
                       @bind-Date="_startDate"
                       MinDate="@_firstDate"
                       MaxDate="_endDate"
                       AutoClose="@_autoClose">
            <PickerActions>
                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _startPicker.ClearAsync())">Clear</MudButton>
                <MudButton OnClick="@(() => _startPicker.CloseAsync(false))">Cancel</MudButton>
                <MudButton Color="Color.Primary" OnClick="@(() => _startPicker.CloseAsync())">Ok</MudButton>
            </PickerActions>
        </MudDatePicker>
        <MudSwitch @bind-Value="_autoClose" Color="Color.Secondary">AutoClose</MudSwitch>
    </div>

    <h3 class="timeframe_between">to</h3>

    <!-- End Date Picker -->
    <div class="datepicker">
        <MudDatePicker @ref="@_endPicker"
                       Label="End Date"
                       @bind-Date="@_endDate"
                       MinDate="@_startDate"
                       MaxDate="@_lastDate"
                       AutoClose="@_autoClose">
            <PickerActions>
                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _endPicker.ClearAsync())">Clear</MudButton>
                <MudButton OnClick="@(() => _endPicker.CloseAsync(false))">Cancel</MudButton>
                <MudButton Color="Color.Primary" OnClick="@(() => _endPicker.CloseAsync())">Ok</MudButton>
            </PickerActions>
        </MudDatePicker>
        <MudSwitch @bind-Value="_autoClose" Color="Color.Secondary">AutoClose</MudSwitch>
    </div>
</div>

@code {
    private MudDatePicker _startPicker;
    private MudDatePicker _endPicker;
    private DateTime? _startDate = DateTime.Today.AddDays(-7); // Default to 7 days ago
    private DateTime? _endDate = DateTime.Today;              // Default to today

    private DateTime? _firstDate => ReaderEvent.MinDate;
    private DateTime? _lastDate => ReaderEvent.MaxDate;
    
    private bool _autoClose = true;
}


<div class="grid-container">
    <div class="grid-item">
        <MudChart ChartType="ChartType.Bar" ChartSeries="@ReaderDescGraph.Series" XAxisLabels="@ReaderDescGraph.Labels" Width="100%" ChartOptions="@ReaderDescGraph.Options"></MudChart>
    </div>
    <div class="grid-item">
        <h2>Warning Flags</h2>
    </div>
   
    <div class="grid-item">
        <MudChart ChartType="ChartType.Line" ChartSeries="@ScanActivationsGraph.Series" XAxisLabels="@ScanActivationsGraph.Labels" Width="100%" Height="350" ChartOptions="ScanActivationsGraph.Options"></MudChart>
    </div>
    <div class="grid-item">
        <MudChart ChartType="ChartType.Bar" ChartSeries="@PersonIDGraph.Series" XAxisLabels="@PersonIDGraph.Labels" Width="100%" Height="350" ChartOptions="PersonIDGraph.Options"></MudChart>
    </div>
    <div class="grid-item">
        <MudChart ChartType="ChartType.Bar" ChartSeries="@RankedPersonIDGraph.Series" XAxisLabels="@RankedPersonIDGraph.Labels" Width="100%" Height="350" ChartOptions="RankedPersonIDGraph.Options"></MudChart>
    </div>
</div>
